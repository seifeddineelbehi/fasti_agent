import 'package:fasti_dashboard/core/components/custom_buttons.dart';
import 'package:fasti_dashboard/core/router/router.dart';
import 'package:fasti_dashboard/core/util/palette.dart';
import 'package:fasti_dashboard/features/auth/presentation/riverpod/auth_provider.dart';
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:go_router/go_router.dart';

class LoginPage extends ConsumerStatefulWidget {
  const LoginPage({super.key});

  @override
  ConsumerState<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends ConsumerState<LoginPage> {
  final _formKey = GlobalKey<FormState>();
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  bool _isLoading = false;
  bool _obscurePassword = true;

  @override
  void dispose() {
    _emailController.dispose();
    _passwordController.dispose();
    super.dispose();
  }

  Future<void> _handleLogin() async {
    if (!_formKey.currentState!.validate()) return;

    final authNotifier = ref.read(authNotifierProvider.notifier);

    final success = await authNotifier.login(
      email: _emailController.text,
      password: _passwordController.text,
    );

    if (!mounted) return;

    final authState = ref.read(authNotifierProvider);

    if (success) {
      context.go(AppRoutes.dashboardPage);
    } else if (authState.failure != null) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(
          content: Text(authState.failure!.message),
          backgroundColor: Colors.red,
        ),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);

    // Get screen size info
    final isTabletOrDesktop = ScreenUtil().screenWidth > 600.w;
    final isMobile = ScreenUtil().screenWidth <= 600.w;

    return Scaffold(
      backgroundColor: Palette.whiteColor,
      body: Center(
        child: Container(
          constraints: BoxConstraints(
            maxWidth: isTabletOrDesktop ? 600.w : double.infinity,
          ),
          margin: EdgeInsets.symmetric(
            horizontal: isMobile ? 16.w : 32.w,
            vertical: isMobile ? 16.h : 32.h,
          ),
          child: Card(
            elevation: isTabletOrDesktop ? 8 : 4,
            child: Padding(
              padding: EdgeInsets.all(isMobile ? 24.w : 32.w),
              child: Form(
                key: _formKey,
                child: SingleChildScrollView(
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    crossAxisAlignment: CrossAxisAlignment.stretch,
                    children: [
                      Icon(
                        Icons.dashboard,
                        size: isMobile ? 48.sp : 64.sp,
                        color: Palette.mainDarkColor,
                      ),
                      SizedBox(height: isMobile ? 16.h : 24.h),
                      Text(
                        'Admin Login',
                        style: theme.textTheme.headlineMedium?.copyWith(
                          fontWeight: FontWeight.bold,
                          color: Palette.blackColor,
                          fontSize: isMobile ? 24.sp : 28.sp,
                        ),
                        textAlign: TextAlign.center,
                      ),
                      SizedBox(height: isMobile ? 24.h : 32.h),
                      TextFormField(
                        controller: _emailController,
                        keyboardType: TextInputType.emailAddress,
                        style: TextStyle(fontSize: 16.sp),
                        decoration: InputDecoration(
                          labelText: 'Email',
                          labelStyle: TextStyle(fontSize: 14.sp),
                          prefixIcon: Icon(
                            Icons.email_outlined,
                            size: 20.sp,
                          ),
                          border: const OutlineInputBorder(),
                          contentPadding: EdgeInsets.symmetric(
                            horizontal: 16.w,
                            vertical: 16.h,
                          ),
                        ),
                        validator: (value) {
                          if (value == null || value.isEmpty) {
                            return 'Please enter your email';
                          }
                          if (!value.contains('@')) {
                            return 'Please enter a valid email';
                          }
                          return null;
                        },
                      ),
                      SizedBox(height: 16.h),
                      TextFormField(
                        controller: _passwordController,
                        obscureText: _obscurePassword,
                        style: TextStyle(fontSize: 16.sp),
                        decoration: InputDecoration(
                          labelText: 'Password',
                          labelStyle: TextStyle(fontSize: 14.sp),
                          prefixIcon: Icon(
                            Icons.lock_outlined,
                            size: 20.sp,
                          ),
                          suffixIcon: IconButton(
                            icon: Icon(
                              _obscurePassword
                                  ? Icons.visibility_outlined
                                  : Icons.visibility_off_outlined,
                              size: 20.sp,
                            ),
                            onPressed: () {
                              setState(() {
                                _obscurePassword = !_obscurePassword;
                              });
                            },
                          ),
                          border: const OutlineInputBorder(),
                          contentPadding: EdgeInsets.symmetric(
                            horizontal: 16.w,
                            vertical: 16.h,
                          ),
                        ),
                        validator: (value) {
                          if (value == null || value.isEmpty) {
                            return 'Please enter your password';
                          }
                          return null;
                        },
                      ),
                      SizedBox(height: 24.h),
                      CustomButtons.simpleLongButton(
                        onPressed: _isLoading ? null : _handleLogin,
                        text: 'Sign In',
                        isLoading: _isLoading,
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ),
        ),
      ),
    );
  }
}
